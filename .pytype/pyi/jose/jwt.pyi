# (generated with --quick)

import jose.constants
import jose.exceptions
import time
import typing
from typing import Any, Tuple, Type, Union

ALGORITHMS: jose.constants.Algorithms
ExpiredSignatureError: Type[jose.exceptions.ExpiredSignatureError]
JWSError: Type[jose.exceptions.JWSError]
JWTClaimsError: Type[jose.exceptions.JWTClaimsError]
JWTError: Type[jose.exceptions.JWTError]
Mapping: Type[typing.Mapping]
datetime: Type[datetime.datetime]
json: module
jws: module
string_types: Tuple[Type[str]]
timedelta: Type[datetime.timedelta]

def _validate_at_hash(claims, access_token, algorithm) -> None: ...
def _validate_aud(claims, audience = ...) -> None: ...
def _validate_claims(claims, audience = ..., issuer = ..., subject = ..., algorithm = ..., access_token = ..., options = ...) -> None: ...
def _validate_exp(claims, leeway = ...) -> None: ...
def _validate_iat(claims) -> None: ...
def _validate_iss(claims, issuer = ...) -> None: ...
def _validate_jti(claims) -> None: ...
def _validate_nbf(claims, leeway = ...) -> None: ...
def _validate_sub(claims, subject = ...) -> None: ...
def calculate_at_hash(access_token, hash_alg) -> Any: ...
def decode(token, key, algorithms = ..., options = ..., audience = ..., issuer = ..., subject = ..., access_token = ...) -> Any: ...
def encode(claims, key, algorithm = ..., headers = ..., access_token = ...) -> Any: ...
def get_unverified_claims(token) -> Any: ...
def get_unverified_header(token) -> Any: ...
def get_unverified_headers(token) -> Any: ...
def timedelta_total_seconds(delta) -> Any: ...
def timegm(tuple: Union[time.struct_time, Tuple[int, ...]]) -> int: ...
