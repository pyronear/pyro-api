# (generated with --quick)

import click.core
from typing import Any, Callable, Sequence, Type

Argument: Type[click.core.Argument]
Command: Type[click.core.Command]
Group: Type[click.core.Group]
Option: Type[click.core.Option]
_check_for_unicode_literals: Any
inspect: module
sys: module

def _make_command(f, name, attrs, cls) -> Any: ...
def _param_memo(f, param) -> None: ...
def argument(*param_decls, **attrs) -> Callable[[Any], Any]: ...
def command(name = ..., cls = ..., **attrs) -> Callable[[Any], Any]: ...
def confirmation_option(*param_decls, **attrs) -> Callable[[Any], Any]: ...
def echo(message = ..., file = ..., nl = ..., err = ..., color = ...) -> None: ...
def get_current_context(silent = ...) -> Any: ...
def group(name = ..., **attrs) -> Any: ...
def help_option(*param_decls, **attrs) -> Callable[[Any], Any]: ...
def iteritems(x) -> Any: ...
def make_pass_decorator(object_type, ensure = ...) -> Callable[[Any], Any]: ...
def option(*param_decls, **attrs) -> Callable[[Any], Any]: ...
def pass_context(f) -> Callable: ...
def pass_obj(f) -> Callable: ...
def password_option(*param_decls, **attrs) -> Callable[[Any], Any]: ...
def update_wrapper(wrapper: Callable, wrapped: Callable, assigned: Sequence[str] = ..., updated: Sequence[str] = ...) -> Callable: ...
def version_option(version = ..., *param_decls, **attrs) -> Callable[[Any], Any]: ...
