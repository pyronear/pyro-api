# (generated with --quick)

import __future__
from typing import Any, Dict, Type, TypeVar, Union

_HTML5_REPLACEMENTS: Dict[str, str]
absolute_import: __future__._Feature
email: module
mimetypes: module
re: module
six: module

_T1 = TypeVar('_T1')
_TRequestField = TypeVar('_TRequestField', bound=RequestField)

class RequestField:
    __doc__: str
    _filename: Any
    _name: Any
    data: Any
    header_formatter: Any
    headers: dict
    def __init__(self, name, data, filename = ..., headers = ..., header_formatter = ...) -> None: ...
    def _render_part(self, name, value) -> Any: ...
    def _render_parts(self, header_parts) -> str: ...
    @classmethod
    def from_tuples(cls: Type[_TRequestField], fieldname, value, header_formatter = ...) -> _TRequestField: ...
    def make_multipart(self, content_disposition = ..., content_type = ..., content_location = ...) -> None: ...
    def render_headers(self) -> str: ...

def _replace_multiple(value, needles_and_replacements) -> str: ...
def format_header_param(name, value) -> str: ...
def format_header_param_html5(name, value) -> str: ...
def format_header_param_rfc2231(name, value) -> Any: ...
def guess_content_type(filename, default: _T1 = ...) -> Union[str, _T1]: ...
