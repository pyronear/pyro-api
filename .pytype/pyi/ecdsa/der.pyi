# (generated with --quick)

import __future__
import itertools
from typing import Any, Tuple, Type

_sentry: Any
base64: module
binascii: module
chain: Type[itertools.chain]
division: __future__._Feature
text_type: Type[str]
warnings: module

class UnexpectedDER(Exception): ...

def b(s) -> Any: ...
def encode_bitstring(s, unused = ...) -> Any: ...
def encode_constructed(tag, value) -> bytes: ...
def encode_integer(r) -> Any: ...
def encode_length(l) -> bytes: ...
def encode_number(n) -> Any: ...
def encode_octet_string(s) -> Any: ...
def encode_oid(first, second, *pieces) -> bytes: ...
def encode_sequence(*encoded_pieces) -> Any: ...
def int2byte(*v) -> bytes: ...
def read_length(string) -> Tuple[Any, Any]: ...
def read_number(string) -> Tuple[Any, int]: ...
def remove_bitstring(string, expect_unused = ...) -> Tuple[Any, Any]: ...
def remove_constructed(string) -> Tuple[Any, Any, Any]: ...
def remove_integer(string) -> Tuple[int, Any]: ...
def remove_object(string) -> Tuple[tuple, Any]: ...
def remove_octet_string(string) -> Tuple[Any, Any]: ...
def remove_sequence(string) -> Tuple[Any, Any]: ...
def str_idx_as_int(string, index) -> Any: ...
def topem(der, name) -> Any: ...
def unpem(pem) -> bytes: ...
