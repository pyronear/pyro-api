# (generated with --quick)

from typing import Any, List, TypeVar, Union

__all__: List[str]
hmac: module

_T0 = TypeVar('_T0')

def bit_length(num) -> int: ...
def bits2int(data, qlen) -> int: ...
def bits2octets(data, order) -> bytes: ...
def generate_k(order, secexp, hash_func, data, retry_gen = ..., extra_entropy = ...) -> Any: ...
def hexlify(data: bytes, sep: Union[bytes, str] = ..., bytes_per_sep: int = ...) -> bytes: ...
def hmac_compat(data: _T0) -> _T0: ...
def number_to_string(num, order) -> bytes: ...
def number_to_string_crop(num, order) -> bytes: ...
