# (generated with --quick)

import __future__
from typing import Any, Callable, List

PersistentlyDeprecated2017 = CryptographyDeprecationWarning
PersistentlyDeprecated2019 = CryptographyDeprecationWarning

abc: module
absolute_import: __future__._Feature
binascii: module
division: __future__._Feature
inspect: module
int_from_bytes: Callable[..., int]
print_function: __future__._Feature
sys: module
warnings: module

class CryptographyDeprecationWarning(UserWarning): ...

class InterfaceNotImplemented(Exception): ...

class _DeprecatedValue:
    message: Any
    value: Any
    warning_class: Any
    def __init__(self, value, message, warning_class) -> None: ...

class _ModuleWithDeprecations:
    def __delattr__(self, attr) -> None: ...
    def __dir__(self) -> List[str]: ...
    def __getattr__(self, attr) -> Any: ...
    def __init__(self, module) -> None: ...
    def __setattr__(self, attr, value) -> None: ...

def _check_bytes(name, value) -> None: ...
def _check_byteslike(name, value) -> None: ...
def cached_property(func) -> property: ...
def deprecated(value, module_name, message, warning_class) -> _DeprecatedValue: ...
def int_to_bytes(integer, length = ...) -> Any: ...
def read_only_property(name) -> property: ...
def register_interface(iface) -> Callable[[Any], Any]: ...
def register_interface_if(predicate, iface) -> Callable[[Any], Any]: ...
def signature(obj: Callable, *, follow_wrapped: bool = ...) -> inspect.Signature: ...
def verify_interface(iface, klass) -> None: ...
