# (generated with --quick)

import __future__
from typing import Any, Callable, Dict

CRLEntryExtensionOID: Any
ExtensionOID: Any
OCSPExtensionOID: Any
_ASN1Type: Any
_CRLREASONFLAGS: Dict[Any, int]
_CRL_ENTRY_EXTENSION_ENCODE_HANDLERS: Dict[Any, Callable[[Any, Any], Any]]
_CRL_ENTRY_REASON_ENUM_TO_CODE: Any
_CRL_EXTENSION_ENCODE_HANDLERS: Dict[Any, Callable[[Any, Any], Any]]
_DISTPOINT_TYPE_FULLNAME: Any
_DISTPOINT_TYPE_RELATIVENAME: Any
_EXTENSION_ENCODE_HANDLERS: Dict[Any, Callable[[Any, Any], Any]]
_OCSP_BASICRESP_EXTENSION_ENCODE_HANDLERS: Dict[Any, Callable[[Any, Any], Any]]
_OCSP_REQUEST_EXTENSION_ENCODE_HANDLERS: Dict[Any, Callable[[Any, Any], Any]]
absolute_import: __future__._Feature
calendar: module
division: __future__._Feature
ipaddress: module
print_function: __future__._Feature
six: module
utils: module
x509: module

def _encode_alt_name(backend, san) -> Any: ...
def _encode_asn1_int(backend, x) -> Any: ...
def _encode_asn1_int_gc(backend, x) -> Any: ...
def _encode_asn1_str(backend, data) -> Any: ...
def _encode_asn1_str_gc(backend, data) -> Any: ...
def _encode_asn1_utf8_str(backend, string) -> Any: ...
def _encode_authority_key_identifier(backend, authority_keyid) -> Any: ...
def _encode_basic_constraints(backend, basic_constraints) -> Any: ...
def _encode_cdps_freshest_crl(backend, cdps) -> Any: ...
def _encode_certificate_policies(backend, certificate_policies) -> Any: ...
def _encode_crl_number_delta_crl_indicator(backend, ext) -> Any: ...
def _encode_crl_reason(backend, crl_reason) -> Any: ...
def _encode_extended_key_usage(backend, extended_key_usage) -> Any: ...
def _encode_full_name(backend, full_name) -> Any: ...
def _encode_general_name(backend, name) -> Any: ...
def _encode_general_name_preallocated(backend, name, gn) -> None: ...
def _encode_general_names(backend, names) -> Any: ...
def _encode_general_subtree(backend, subtrees) -> Any: ...
def _encode_information_access(backend, info_access) -> Any: ...
def _encode_inhibit_any_policy(backend, inhibit_any_policy) -> Any: ...
def _encode_invalidity_date(backend, invalidity_date) -> Any: ...
def _encode_issuing_dist_point(backend, ext) -> Any: ...
def _encode_key_usage(backend, key_usage) -> Any: ...
def _encode_name(backend, name) -> Any: ...
def _encode_name_constraints(backend, name_constraints) -> Any: ...
def _encode_name_entry(backend, attribute) -> Any: ...
def _encode_name_gc(backend, attributes) -> Any: ...
def _encode_nonce(backend, nonce) -> Any: ...
def _encode_notice_reference(backend, notice) -> Any: ...
def _encode_ocsp_nocheck(backend, ext) -> Any: ...
def _encode_policy_constraints(backend, policy_constraints) -> Any: ...
def _encode_reasonflags(backend, reasons) -> Any: ...
def _encode_relative_name(backend, relative_name) -> Any: ...
def _encode_sk_name_entry(backend, attributes) -> Any: ...
def _encode_subject_key_identifier(backend, ski) -> Any: ...
def _txt2obj(backend, name) -> Any: ...
def _txt2obj_gc(backend, name) -> Any: ...
