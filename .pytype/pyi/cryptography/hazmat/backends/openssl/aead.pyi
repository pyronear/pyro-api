# (generated with --quick)

import __future__
import cryptography.exceptions
from typing import Any, Type

InvalidTag: Type[cryptography.exceptions.InvalidTag]
_DECRYPT: int
_ENCRYPT: int
absolute_import: __future__._Feature
division: __future__._Feature
print_function: __future__._Feature

def _aead_cipher_name(cipher) -> bytes: ...
def _aead_setup(backend, cipher_name, key, nonce, tag, tag_len, operation) -> Any: ...
def _decrypt(backend, cipher, nonce, data, associated_data, tag_length) -> Any: ...
def _encrypt(backend, cipher, nonce, data, associated_data, tag_length) -> Any: ...
def _process_aad(backend, ctx, associated_data) -> None: ...
def _process_data(backend, ctx, data) -> Any: ...
def _set_length(backend, ctx, data_len) -> None: ...
