# (generated with --quick)

import __future__
from typing import Any, Callable, Tuple, TypeVar

BIT_STRING: int
CONSTRUCTED: int
CONTEXT_SPECIFIC: int
GENERALIZED_TIME: int
INTEGER: int
NULL: int
OBJECT_IDENTIFIER: int
OCTET_STRING: int
PRINTABLE_STRING: int
SEQUENCE: int
SET: int
UTC_TIME: int
absolute_import: __future__._Feature
division: __future__._Feature
int_from_bytes: Callable[..., int]
print_function: __future__._Feature
six: module

_TDERReader = TypeVar('_TDERReader', bound=DERReader)

class DERReader:
    data: memoryview
    def __enter__(self: _TDERReader) -> _TDERReader: ...
    def __exit__(self, exc_type, exc_value, tb) -> None: ...
    def __init__(self, data) -> None: ...
    def as_integer(self) -> int: ...
    def check_empty(self) -> None: ...
    def is_empty(self) -> bool: ...
    def read_any_element(self) -> Tuple[Any, DERReader]: ...
    def read_byte(self) -> int: ...
    def read_bytes(self, n) -> memoryview: ...
    def read_element(self, expected_tag) -> Any: ...
    def read_optional_element(self, expected_tag) -> Any: ...
    def read_single_element(self, expected_tag) -> Any: ...

def encode_der(tag, *children) -> bytes: ...
def encode_der_integer(x) -> Any: ...
def int_to_bytes(integer, length = ...) -> Any: ...
