# (generated with --quick)

import multipart.exceptions
from typing import Any, Type

Base64Error: Type[binascii.Error]
DecodeError: Type[multipart.exceptions.DecodeError]
base64: module
binascii: module

class Base64Decoder:
    __doc__: str
    cache: Any
    underlying: Any
    def __init__(self, underlying) -> None: ...
    def __repr__(self) -> str: ...
    def close(self) -> None: ...
    def finalize(self) -> None: ...
    def write(self, data) -> int: ...

class QuotedPrintableDecoder:
    __doc__: str
    cache: Any
    underlying: Any
    def __init__(self, underlying) -> None: ...
    def __repr__(self) -> str: ...
    def close(self) -> None: ...
    def finalize(self) -> None: ...
    def write(self, data) -> int: ...
