# (generated with --quick)

from typing import Any, Dict

QueuePool: Any
manage: Any
proxies: Dict[Any, _DBProxy]
threading: Any
util: module

class _DBProxy:
    __doc__: str
    _create_pool_mutex: Any
    kw: Dict[str, Any]
    module: Any
    poolclass: Any
    pools: dict
    def __del__(self) -> None: ...
    def __getattr__(self, key) -> Any: ...
    def __init__(self, module, poolclass = ..., **kw) -> None: ...
    def _serialize(self, *args, **kw) -> Any: ...
    def close(self) -> None: ...
    def connect(self, *args, **kw) -> Any: ...
    def dispose(self, *args, **kw) -> None: ...
    def get_pool(self, *args, **kw) -> Any: ...

def clear_managers() -> None: ...
