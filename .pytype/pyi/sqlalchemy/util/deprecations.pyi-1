# (generated with --quick)

from typing import Any, Callable, TypeVar, Union

_hash_limit_string: Any
compat: module
decorator: Any
exc: Any
inject_docstring_text: Any
inject_param_text: Any
re: module
warnings: module

_T0 = TypeVar('_T0')
_T1 = TypeVar('_T1')

def _decorate_cls_with_warning(cls, constructor, wtype, message, docstring_header = ...) -> Any: ...
def _decorate_with_warning(func, wtype, message, docstring_header = ...) -> Any: ...
def _sanitize_restructured_text(text) -> str: ...
def deprecated(version, message = ..., add_deprecation_to_docstring = ...) -> Callable[[Any], Any]: ...
def deprecated_cls(version, message, constructor = ...) -> Callable[[Any], Any]: ...
def deprecated_option_value(parameter_value: _T0, default_value: _T1, warning_text) -> Union[_T0, _T1]: ...
def deprecated_params(**specs) -> Callable[[Any], Any]: ...
def pending_deprecation(version, message = ..., add_deprecation_to_docstring = ...) -> Callable[[Any], Any]: ...
def warn_deprecated(msg, stacklevel = ...) -> None: ...
def warn_deprecated_limited(msg, args, stacklevel = ...) -> None: ...
def warn_pending_deprecation(msg, stacklevel = ...) -> None: ...
