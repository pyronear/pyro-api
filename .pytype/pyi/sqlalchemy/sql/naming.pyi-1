# (generated with --quick)

from typing import Any, Dict

CheckConstraint: Any
Column: Any
Constraint: Any
ForeignKeyConstraint: Any
Index: Any
PrimaryKeyConstraint: Any
Table: Any
UniqueConstraint: Any
_constraint_name: Any
_defer_name: Any
_defer_none_name: Any
_prefix_dict: Dict[Any, str]
conv: Any
event: Any
events: Any
exc: Any
re: module

class ConventionDict:
    _const_name: Any
    _is_fk: bool
    const: Any
    convention: Any
    table: Any
    def __getitem__(self, key) -> Any: ...
    def __init__(self, const, table, convention) -> None: ...
    def _column_X(self, idx) -> Any: ...
    def _key_column_X_key(self, idx) -> Any: ...
    def _key_column_X_label(self, idx) -> Any: ...
    def _key_column_X_name(self, idx) -> Any: ...
    def _key_constraint_name(self) -> Any: ...
    def _key_referred_column_X_name(self, idx) -> Any: ...
    def _key_referred_table_name(self) -> Any: ...
    def _key_table_name(self) -> Any: ...

def _constraint_name_for_table(const, table) -> Any: ...
def _get_convention(dict_, key) -> Any: ...
