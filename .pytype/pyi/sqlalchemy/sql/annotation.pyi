# (generated with --quick)

from typing import Any, Tuple, Type

annotated_classes: dict
operators: module
util: module

class Annotated:
    _Annotated__element: Any
    __dict__: Any
    __doc__: str
    _annotations: Any
    _constructor: Any
    _hash: int
    def __eq__(self, other) -> Any: ...
    def __hash__(self) -> int: ...
    def __init__(self, element, values) -> None: ...
    def __new__(cls, *args) -> Any: ...
    def __reduce__(self) -> Tuple[Type[Annotated], Tuple[Any, Any]]: ...
    def _annotate(self, values) -> Any: ...
    def _clone(self) -> Any: ...
    def _compiler_dispatch(self, visitor, **kw) -> Any: ...
    def _deannotate(self, values = ..., clone = ...) -> Any: ...
    def _with_annotations(self, values) -> Any: ...

def _deep_annotate(element, annotations, exclude = ...) -> Any: ...
def _deep_deannotate(element, values = ...) -> Any: ...
def _new_annotation_type(cls, base_cls) -> Any: ...
def _prepare_annotations(target_hierarchy, base_cls) -> Any: ...
def _shallow_annotate(element, annotations) -> Any: ...
