# (generated with --quick)

import sqlalchemy.sql.visitors
from typing import Any, Type

Alias: Any
ClauseElement: Any
ClauseVisitor: Type[sqlalchemy.sql.visitors.ClauseVisitor]
ColumnCollection: Any
ColumnElement: Any
CompoundSelect: Any
Delete: Any
False_: Any
FromClause: Any
Insert: Any
Join: Any
Select: Any
Selectable: Any
TableClause: Any
TableSample: Any
True_: Any
Update: Any
__all__: list
alias: Any
all_: Any
and_: Any
any_: Any
asc: Any
between: Any
bindparam: Any
case: Any
cast: Any
collate: Any
column: Any
cte: Any
delete: Any
desc: Any
distinct: Any
except_: Any
except_all: Any
exists: Any
extract: Any
false: Any
func: Any
funcfilter: Any
insert: Any
intersect: Any
intersect_all: Any
join: Any
label: Any
lateral: Any
literal: Any
literal_column: Any
modifier: Any
not_: Any
null: Any
nullsfirst: Any
nullslast: Any
or_: Any
outerjoin: Any
outparam: Any
over: Any
quoted_name: Any
select: Any
subquery: Any
table: Any
tablesample: Any
text: Any
true: Any
tuple_: Any
type_coerce: Any
union: Any
union_all: Any
update: Any
within_group: Any

def __go(lcls) -> None: ...
