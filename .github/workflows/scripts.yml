name: scripts

on:
  push:
    branches: main
  pull_request:
    branches: main

env:
  PYTHON_VERSION: "3.11"
  UV_VERSION: "0.7.2"
  POETRY_VERSION: "2.1.3"

jobs:
  end-to-end:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: abatilo/actions-poetry@v4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - name: Resolve dependencies
        run: |
          poetry export -f requirements.txt --without-hashes --output requirements.txt
          uv pip install --system -r scripts/requirements.txt
      - name: Run the backend & the test
        env:
          SUPERUSER_LOGIN: dummy_login
          SUPERUSER_PWD: dummy&P@ssw0rd!
          POSTGRES_USER: dummy_pg_user
          POSTGRES_PASSWORD: dummy_pg_pwd
          POSTGRES_DB: dummy_pg_db
        run: |
          docker compose -f docker-compose.dev.yml up -d --build --wait
          python scripts/test_e2e.py
