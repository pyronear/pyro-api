name: style

on:
  push:
    branches: main
  pull_request:
    branches: main

env:
  PYTHON_VERSION: "3.11"
  UV_VERSION: "0.5.13"
  POETRY_VERSION: "1.8.3"

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: abatilo/actions-poetry@v4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install dependencies
        run: |
          poetry export -f requirements.txt --without-hashes --only quality --output requirements.txt
          uv pip install --system -r requirements.txt
      - name: Run ruff
        run: |
          ruff --version
          ruff format --check --diff .
          ruff check --diff .

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: abatilo/actions-poetry@v4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install dependencies
        run: |
          poetry export -f requirements.txt --without-hashes --with quality --output requirements.txt
          uv pip install --system -r requirements.txt
      - name: Run mypy
        run: |
          mypy --version
          mypy

  mypy-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install dependencies
        run: uv pip install --system -e "client/.[quality]"
      - name: Run mypy
        run: |
          mypy --version
          cd client && mypy

  precommit-hooks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: abatilo/actions-poetry@v4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install dependencies
        run: |
          poetry export -f requirements.txt --without-hashes --only quality --output requirements.txt
          uv pip install --system -r requirements.txt
      - name: Run pre-commit hooks
        run: |
          git checkout -b temp
          pre-commit install
          pre-commit --version
          pre-commit run --all-files
