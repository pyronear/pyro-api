name: publish

on:
  release:
    types: [ published ]

env:
  PYTHON_VERSION: "3.11"
  UV_VERSION: "0.5.13"

jobs:
  pypi:
    if: "!github.event.release.prerelease"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install dependencies
        run: uv pip install --system setuptools wheel twine --upgrade
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          echo "BUILD_VERSION=${GITHUB_REF#refs/*/}" | cut -c 2- >> $GITHUB_ENV
          cd client && python setup.py sdist bdist_wheel && cd ..
          twine check client/dist/*
          twine upload client/dist/*

  pypi-check:
    if: "!github.event.release.prerelease"
    needs: pypi-publish-client
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [3.8, 3.9, '3.10', 3.11, 3.12]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install package
        run: |
          uv pip install --system pyroclient
          python -c "import pyroclient; print(pyroclient.__version__)"

  conda:
    if: "!github.event.release.prerelease"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Miniconda setup
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        shell: bash -el {0}
        run: conda install -y conda-build conda-verify anaconda-client
      - name: Build and publish
        shell: bash -el {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          echo "BUILD_VERSION=${GITHUB_REF#refs/*/}" | cut -c 2- >> $GITHUB_ENV
          cd client && python setup.py sdist && cd ..
          mkdir client/conda-dist
          cd client && conda-build .conda/ --output-folder conda-dist && cd ..
          ls -l client/conda-dist/noarch/*tar.bz2
          anaconda upload client/conda-dist/noarch/*tar.bz2 -u pyronear

  conda-check:
    if: "!github.event.release.prerelease"
    needs: conda-publish-client
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [3.8, 3.9, '3.10', 3.11, 3.12]
    steps:
      - name: Miniconda setup
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python }}
      - name: Install package
        shell: bash -el {0}
        run: |
          conda install -c pyronear pyroclient
          python -c "import pyroclient; print(pyroclient.__version__)"
