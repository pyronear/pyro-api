name: api

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  docker-ready:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Build & run docker
        env:
          QARNOT_TOKEN: ${{ secrets.QARNOT_TOKEN }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          BUCKET_MEDIA_FOLDER: ${{ secrets.BUCKET_MEDIA_FOLDER }}
        run: docker-compose up -d --build
      - name: Docker sanity check
        run: sleep 10 && nc -vz localhost 8080

  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build & run docker
        env:
          QARNOT_TOKEN: ${{ secrets.QARNOT_TOKEN }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          BUCKET_MEDIA_FOLDER: ${{ secrets.BUCKET_MEDIA_FOLDER }}
        run: |
          docker build src/. -t pyroapi:python3.8-alpine3.10
          docker-compose -f docker-compose-dev.yml up -d --build
      - name: Run docker test
        run: |
          docker-compose -f docker-compose-dev.yml exec -T backend coverage --version
          docker-compose -f docker-compose-dev.yml exec -T backend coverage run -m pytest tests/
          docker-compose -f docker-compose-dev.yml exec -T backend coverage xml
          docker cp pyro-api_backend_1:/app/coverage.xml .

      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ./coverage.xml
          if-no-files-found: error

  codecov-upload:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          fail_ci_if_error: true

  headers:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.7]
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Run unittests
        run: python .github/validate_headers.py
