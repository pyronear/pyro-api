name: client

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-client-deps-${{ matrix.python }}-${{ hashFiles('client/requirements.txt') }}-${{ hashFiles('client/**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-client-deps-${{ matrix.python }}-${{ hashFiles('client/requirements.txt') }}-
            ${{ runner.os }}-client-deps-${{ matrix.python }}-
            ${{ runner.os }}-client-deps-
            ${{ runner.os }}-
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e client/

  unittest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Build & run API server
        env:
          QARNOT_TOKEN: ${{ secrets.QARNOT_TOKEN }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          BUCKET_MEDIA_FOLDER: ${{ secrets.BUCKET_MEDIA_FOLDER }}
        run: |
          docker-compose up -d --build
          docker ps
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-client-deps-${{ matrix.python }}-${{ hashFiles('client/requirements.txt') }}-${{ hashFiles('client/**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-client-deps-${{ matrix.python }}-${{ hashFiles('client/requirements.txt') }}-
            ${{ runner.os }}-client-deps-${{ matrix.python }}-
            ${{ runner.os }}-client-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e client/
          pip install coverage
      - name: Run client unittests
        run: |
          coverage --version
          sleep 5
          cd client && coverage run -m unittest discover test/

  docs-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-client-deps-${{ matrix.python }}-${{ hashFiles('client/requirements.txt') }}-${{ hashFiles('client/**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-client-deps-${{ matrix.python }}-${{ hashFiles('client/requirements.txt') }}-
            ${{ runner.os }}-client-deps-${{ matrix.python }}-
            ${{ runner.os }}-client-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e client/ --upgrade
          pip install -r client/docs/requirements.txt

      - name: Build documentation
        run: |
          sphinx-build client/docs/source client/docs/build -a -v
