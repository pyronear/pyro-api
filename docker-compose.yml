version: '3.7'

services:
  backend:
    build: src
    restart: always
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8080
    volumes:
      - ./src/:/app/
    ports:
      - 8080:8080
    environment:
      - DEBUG=false
      - SQLALCHEMY_SILENCE_UBER_WARNING=1
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - SUPERUSER_LOGIN=${SUPERUSER_LOGIN}
      - SUPERUSER_PWD=${SUPERUSER_PWD}
      - QARNOT_TOKEN=${QARNOT_TOKEN}
      - BUCKET_NAME=${BUCKET_NAME}
      - BUCKET_MEDIA_FOLDER=${BUCKET_MEDIA_FOLDER}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_REGION=${S3_REGION}
      - S3_PROXY_URL=${S3_PROXY_URL}
      - SENTRY_DSN=${SENTRY_DSN}
      - SENTRY_SERVER_NAME=${SENTRY_SERVER_NAME}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
